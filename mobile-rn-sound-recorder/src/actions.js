import * as constants from './constants';

// Public Action Creators for Sagas

/**
 * Initializes component (should be called first)
 * @param options.audioSettings audio settings (optinal, see iosAudioSettings, androidAudioSettings constants for details)
 * @param options.lang language 'eng' or 'ger' (optinal, by default 'eng')
 * @param options.wordsMap words Map(key, value) (optinal, used for PermissionsAndroid.request)
 * @param options.logLevel logging level (0 - no debug info, default; 1; 2 - wordy log)
 */
export const mountRequest = (options) => ({ type: constants.MOUNT_REQUEST, options });

/**
 * Shutdowns component
 */
export const unmountRequest = () => ({ type: constants.UNMOUNT_REQUEST });

/**
 * Starts recording
 */
export const startRequest = () => ({ type: constants.START_REQUEST });

/**
 * Ends recording
 * @param success false if stopped by error, true otherwise (true by default)
 */
export const stopRequest = (success = true) => ({ type: constants.STOP_REQUEST, success });

/**
 * Saves last recording to the file
 * @param fileInfo.name file name w/o extension (optinal, if not specified generated by default)
 * @param fileInfo.path file path (optinal, by default DocumentPath)
 * @param userData user data object (optinal, passed as a payload with onFileSaved action)
*/
export const saveAsFileRequest = (fileInfo, userData) => ({
  type: constants.SAVE_AS_FILE_REQUEST,
  fileInfo,
  userData
});

// Exported Public Actions

export const publicActions = {
  mountRequest,         // initializes component
  unmountRequest,       // shutdowns component
  startRequest,         // starts recording
  stopRequest,          // stops recording
  saveAsFileRequest     // saves recorded audio to file
};

export default publicActions;

// ******************************************************************
// Private Section

// Private Action Creators for Notification

export const onError = (error) => ({ type: constants.ON_ERROR, error });
export const onRecordingSaved = info => ({ type: constants.ON_RECORDING_SAVED, info });

// Private Action Creators for Reducer

export const setState = params => ({ type: constants.SET_STATE, params });
export const setInfo = info => ({ type: constants.SET_INFO, info });
export const setCurrentTime = currentTime => ({ type: constants.SET_CURRENT_TIME, currentTime });

